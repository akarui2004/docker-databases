version: "3.8"

networks:
  localdb:
    driver: ${APP_NETWORK_DRIVER}

services:
  postgres:
    platform: ${PLATFORM}
    container_name: ${POSTGRES_CONTAINER_NAME}
    build:
      context: ./postgres
      args:
        - VERSION=${POSTGRES_VERSION}
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/
      - ./postgres/postgres.conf:/data/postgres/postgresql.conf
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - localdb
  mysql:
    platform: ${PLATFORM}
    container_name: ${MYSQL_CONTAINER_NAME}
    build:
      context: ./mysql
      args:
        - VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${MYSQL_TIMEZONE}
    volumes:
      - ./volumes/mysql:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - localdb
  mongodb:
    platform: ${PLATFORM}
    container_name: name
    build:
      context: ./mongodb
      args:
        - VERSION=${MONGODB_VERSION}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    volumes:
      - ./volumes/mongodb:/data/db
      - ./volumes/mongo_config:/data/configdb
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - localdb
  redis:
    image: redis:latest
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./volumes/redis:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASE=${REDIS_DATABASE}
    networks:
      - localdb
